// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`00-tasks 1`] = `
Array [
  "#0 <header>: *** Test Cases ***",
  "#1 <string|header>: Test For Example 1",
  "#2 <atom>: FOR <variable2>: \${x} <atom>: IN <string>: '1' <string>: '2'",
  "#3 <keyword>: No Operation",
  "#4 <atom>: END",
  "#5",
  "#6 <string|header>: Test For Example 2",
  "#7 <atom>: FOR <variable2>: \${x} <atom>: IN <string>: '1' <string>: '2'",
  "#8 <atom>: FOR <variable2>: \${y} <atom>: IN <string>: '2'",
  "#9 <keyword>: No Operation",
  "#10 <atom>: END",
  "#11 <atom>: END",
  "#12",
  "#13 <string|header>: Test For Example 3",
  "#14 <atom>: FOR <variable2>: \${x} <atom>: IN <string>: '1' <string>: '2'",
  "#15 <atom>: IF <string>: {1 <string>: &gt; <string>: 0}",
  "#16 <keyword>: No Operation",
  "#17 <atom>: ELSE IF <string>: {2 <string>: &gt; <string>: 1}",
  "#18 <keyword>: No Operation",
  "#19 <atom>: ELSE",
  "#20 <keyword>: No Operation",
  "#21 <atom>: END",
  "#22 <atom>: END",
  "#23",
  "#24 <string|header>: Test IF Example 1",
  "#25 <atom>: IF <string>: {1 <string>: &gt; <string>: 0}",
  "#26 <keyword>: No Operation",
  "#27 <atom>: END",
  "#28",
  "#29 <string|header>: Test IF Example 2",
  "#30 <atom>: IF <string>: {1 <string>: &gt; <string>: 0}",
  "#31 <keyword>: No Operation",
  "#32 <atom>: ELSE",
  "#33 <keyword>: No Operation",
  "#34 <atom>: END",
  "#35",
  "#36 <string|header>: Test IF Example 3",
  "#37 <atom>: IF <string>: {1 <string>: &gt; <string>: 0}",
  "#38 <keyword>: No Operation",
  "#39 <atom>: ELSE IF <string>: {2 <string>: &gt; <string>: 1}",
  "#40 <keyword>: No Operation",
  "#41 <atom>: END",
  "#42",
  "#43 <string|header>: Test IF Example 4",
  "#44 <atom>: IF <string>: {1 <string>: &gt; <string>: 0}",
  "#45 <keyword>: No Operation",
  "#46 <atom>: ELSE IF <string>: {2 <string>: &gt; <string>: 1}",
  "#47 <keyword>: No Operation",
  "#48 <atom>: ELSE",
  "#49 <keyword>: No Operation",
  "#50 <atom>: END",
  "#51",
  "#52 <string|header>: Test IF Example 5",
  "#53 <atom>: IF <string>: {1 <string>: &gt; <string>: 0}",
  "#54 <atom>: IF <string>: {1 <string>: &gt; <string>: 0}",
  "#55 <keyword>: No Operation",
  "#56 <atom>: END",
  "#57 <atom>: ELSE IF <string>: {2 <string>: &gt; <string>: 1}",
  "#58 <atom>: IF <string>: {1 <string>: &gt; <string>: 0}",
  "#59 <keyword>: No Operation",
  "#60 <atom>: END",
  "#61 <atom>: ELSE",
  "#62 <atom>: IF <string>: {1 <string>: &gt; <string>: 0}",
  "#63 <keyword>: No Operation",
  "#64 <atom>: END",
  "#65 <atom>: END",
  "#66",
  "#67 <string|header>: Test IF Example 6",
  "#68 <atom>: IF <string>: {1 <string>: &gt; <string>: 0}",
  "#69 <atom>: FOR <variable2>: \${x} <atom>: IN <string>: '1' <string>: '2'",
  "#70 <keyword>: No Operation",
  "#71 <atom>: END",
  "#72 <atom>: ELSE IF <string>: {2 <string>: &gt; <string>: 1}",
  "#73 <atom>: FOR <variable2>: \${x} <atom>: IN <string>: '1' <string>: '2'",
  "#74 <keyword>: No Operation",
  "#75 <atom>: END",
  "#76 <atom>: ELSE",
  "#77 <atom>: FOR <variable2>: \${x} <atom>: IN <string>: '1' <string>: '2'",
  "#78 <keyword>: No Operation",
  "#79 <atom>: END",
  "#80 <atom>: END",
  "#81",
]
`;

exports[`01-try-except 1`] = `
Array [
  "#0 <header>: *** Test Cases ***",
  "#1 <string|header>: First example",
  "#2 <atom>: TRY",
  "#3 <keyword>: Some Keyword",
  "#4 <atom>: EXCEPT <string>: Error <string>: message",
  "#5 <keyword>: Error Handler Keyword",
  "#6 <atom>: END",
  "#7 <keyword>: Keyword Outside",
  "#8",
  "#9 <string|header>: Capture error",
  "#10 <atom>: TRY",
  "#11 <keyword>: Some Keyword",
  "#12 <atom>: EXCEPT <cm-builtin>: GLOB: <string>: ValueError: <string>: * <atom>: AS <variable2>: \${error}",
  "#13 <keyword>: Error Handler 1 <variable2>: \${error}",
  "#14 <atom>: EXCEPT <cm-builtin>: REGEXP: <string>: [Ee]rror <string>: \\\\\\\\d+ <cm-builtin>: GLOB: <variable2>: \${pattern} <atom>: AS <variable2>: \${error}",
  "#15 <keyword>: Error Handler 2 <variable2>: \${error}",
  "#16 <atom>: EXCEPT <atom>: AS <variable2>: \${error}",
  "#17 <keyword>: Error Handler 3 <variable2>: \${error}",
  "#18 <atom>: END",
  "#19",
  "#20 <string|header>: TRY/EXCEPT/ELSE/FINALLY",
  "#21 <atom>: TRY",
  "#22 <keyword>: Some keyword",
  "#23 <atom>: EXCEPT",
  "#24 <keyword>: Log <string>: Error <string>: occurred!",
  "#25 <atom>: ELSE",
  "#26 <keyword>: Log <string>: No <string>: error <string>: occurred.",
  "#27 <atom>: FINALLY",
  "#28 <keyword>: Log <string>: Always <string>: executed.",
  "#29 <atom>: END",
  "#30",
  "#31 <string|header>: Glob pattern",
  "#32 <atom>: TRY",
  "#33 <keyword>: Some Keyword",
  "#34 <atom>: EXCEPT <string>: ValueError: <string>: * <attribute>: type <operator>: = <string>: GLOB",
  "#35 <keyword>: Error Handler 1",
  "#36 <atom>: EXCEPT <string>: [Ee]rror <string>: ?? <string>: occurred <variable2>: \${pattern} <attribute>: type <operator>: = <string>: glob",
  "#37 <keyword>: Error Handler 2",
  "#38 <atom>: END",
  "#39",
  "#40 <string|header>: Regular expression",
  "#41 <atom>: TRY",
  "#42 <keyword>: Some Keyword",
  "#43 <atom>: EXCEPT <string>: ValueError: <string>: .* <attribute>: type <operator>: = <variable2>: \${regexp}",
  "#44 <keyword>: Error Handler 1",
  "#45 <atom>: EXCEPT <string>: [Ee]rror <string>: \\\\\\\\d+ <string>: occurred <attribute>: type <operator>: = <string>: Regexp <cm-comment>: # Backslash needs to be escaped.",
  "#46 <keyword>: Error Handler 2",
  "#47 <atom>: END",
  "#48",
  "#49 <string|header>: Match start",
  "#50 <atom>: TRY",
  "#51 <keyword>: Some Keyword",
  "#52 <atom>: EXCEPT <string>: ValueError: <variable2>: \${beginning} <attribute>: type <operator>: = <string>: start",
  "#53 <keyword>: Error Handler",
  "#54 <atom>: END",
  "#55",
  "#56 <string|header>: Explicit exact match",
  "#57 <atom>: TRY",
  "#58 <keyword>: Some Keyword",
  "#59 <atom>: EXCEPT <string>: ValueError: <string>: invalid <string>: literal <string>: for <string>: int() <string>: with <string>: base <string>: 10: <string>: 'ooops' <attribute>: type <operator>: = <string>: LITERAL",
  "#60 <keyword>: Error Handler",
  "#61 <atom>: EXCEPT <string>: Error <string>: 13 <string>: occurred <attribute>: type <operator>: = <string>: LITERAL",
  "#62 <keyword>: Error Handler 2",
  "#63 <atom>: END",
  "#64",
]
`;

exports[`02-while 1`] = `
Array [
  "#0 <header>: *** Test Cases ***",
  "#1 <string|header>: Loop as long as condition is True",
  "#2 <atom>: WHILE <variable2>: \${x} <string>: &gt; <string>: 0",
  "#3 <keyword>: Log <variable2>: \${x}",
  "#4 <variable2>: \${x} <operator>: = <keyword>: Evaluate <variable2>: \${x} <string>: - <string>: 1",
  "#5 <atom>: END",
  "#6",
  "#7 <string|header>: Limit as iteration count",
  "#8 <atom>: WHILE <string>: True <attribute>: limit <operator>: = <string>: 100",
  "#9 <keyword>: Log <string>: This <string>: is <string>: run <string>: 100 <string>: times.",
  "#10 <atom>: END",
  "#11",
  "#12 <string|header>: Limit as time",
  "#13 <atom>: WHILE <string>: True <attribute>: limit <operator>: = <string>: 10 <string>: seconds",
  "#14 <keyword>: Log <string>: This <string>: is <string>: run <string>: 10 <string>: seconds.",
  "#15 <atom>: END",
  "#16",
  "#17 <header>: *** Keywords ***",
  "#18 <cm-def>: Example",
  "#19 <atom>: FOR <variable2>: \${x} <atom>: IN RANGE <string>: 1000",
  "#20 <atom>: IF <variable2>: \${x} <string>: &gt; <string>: 10 <atom>: BREAK",
  "#21 <keyword>: Log <string>: Executed <string>: only <string>: when <variable2>: \${x} <string>: &lt; <string>: 11",
  "#22 <atom>: IF <variable2>: \${x} <string>: % <string>: 2 <operator>: == <string>: 0 <atom>: CONTINUE",
  "#23 <keyword>: Log <string>: Executed <string>: only <string>: when <variable2>: \${x} <string>: is <string>: odd.",
  "#24 <atom>: END",
  "#25",
  "#26 <cm-def>: No <cm-def>: limit",
  "#27 <atom>: WHILE <string>: True <attribute>: limit <operator>: = <string>: NONE",
  "#28 <keyword>: Log <string>: This <string>: must <string>: be <string>: forcefully <string>: stopped.",
  "#29 <atom>: END",
  "#30",
]
`;

exports[`03-inline-if 1`] = `
Array [
  "#0 <header>: *** Keyword ***",
  "#1 <cm-def>: Normal <cm-def>: IF",
  "#2 <atom>: IF <string>: $condition1",
  "#3 <keyword>: Keyword <string>: argument",
  "#4 <atom>: END",
  "#5 <atom>: IF <string>: $condition2",
  "#6 <keyword>: RETURN",
  "#7 <atom>: END",
  "#8",
  "#9 <cm-def>: Inline <cm-def>: IF",
  "#10 <atom>: IF <string>: $condition1 <keyword>: Keyword <string>: argument",
  "#11 <atom>: IF <string>: $condition2 <atom>: RETURN",
  "#12",
  "#13 <header>: *** Test Cases ***",
  "#14 <string|header>: Inline IF/ELSE",
  "#15 <atom>: IF <string>: $condition <keyword>: Keyword <string>: argument <atom>: ELSE <keyword>: Another Keyword",
  "#16 <keyword>: Log <string>: 1",
  "#17",
  "#18 <string|header>: Inline IF/ELSE IF/ELSE",
  "#19 <atom>: IF <string>: $cond1 <keyword>: Keyword 1 <atom>: ELSE IF <string>: $cond2 <keyword>: Keyword 2 <atom>: ELSE IF <string>: $cond3 <keyword>: Keyword 3 <atom>: ELSE <keyword>: Keyword 4",
  "#20 <keyword>: Log <string>: 2",
  "#21",
  "#22 <header>: *** Keyword ***",
  "#23 <cm-def>: Inline <cm-def>: IF/ELSE <cm-def>: with <cm-def>: assignment",
  "#24 <variable2>: \${var} <operator>: = <atom>: IF <string>: $condition <keyword>: Keyword <string>: argument <atom>: ELSE <keyword>: Another Keyword",
  "#25 <keyword>: Log <string>: 3",
  "#26",
  "#27 <cm-def>: Inline <cm-def>: IF/ELSE <cm-def>: with <cm-def>: assignment <cm-def>: having <cm-def>: multiple <cm-def>: variables",
  "#28 <variable2>: \${host}    \${port} <operator>: = <atom>: IF <string>: $production <keyword>: Get Production Config <atom>: ELSE <keyword>: Get Testing Config <string>: fooo",
  "#29 <keyword>: Log <string>: 4",
]
`;
